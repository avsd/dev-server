heat_template_version: 2015-04-30

description: |
  OpenStack Heat template for a Single Linux machine with VIM/Tmux development environment.
parameter_groups:

- label: Server Settings
  parameters:
    - flavor
    - image
    - key_name

- label: User settings
  parameters:
    - username
    - email
    - fullname

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - server_name

parameters:

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 1 GB General Purpose v1
    constraints:
      - allowed_values:
        - 1 GB General Purpose v1
        - 2 GB General Purpose v1
        - 4 GB General Purpose v1
        - 8 GB General Purpose v1
        - 15 GB I/O v1
        - 30 GB I/O v1
        - 1GB Standard Instance
        - 2GB Standard Instance
        - 4GB Standard Instance
        - 8GB Standard Instance
        - 15GB Standard Instance
        - 30GB Standard Instance
        description: must be a valid Rackspace Cloud Server flavor.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      - Ubuntu 15.10 (Wily Werewolf) (PVHVM)
      description: Must be a supported operating system.

  server_name:
    label: Server Hostname
    description: The instance name
    type: string
    default: dev

  key_name:
    label: SSH Key
    description: Name of the keypair to be used to SSH to the instance
    type: string
    default: david-macbook
    constraints:
      - custom_constraint: nova.keypair

  username:
    label: Linux username
    type: string
    constraints:
      - length: { min: 2, max: 8 }
        description: User name must be between 2 and 8 characters
      - allowed_pattern: "[a-z]+[a-zA-Z0-9]*"
        description: User name must start with an lowercase character

  fullname:
    label: Full name
    type: string
    description: Will be used in Linux user and in Git config

  email:
    label: Email address
    type: string
    # constraints:
    #   - allowed_pattern: "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
    #     description: Must be a valid email

resources:

  dev_server:
    type: "OS::Nova::Server"
    properties:
      key_name: { get_param: key_name }
      flavor: { get_param: flavor }
      image: { get_param: image }
      name: { get_param: server_name }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
      config_drive: "true"
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config
            package_update: true
            packages:
              - git
              - python-apt
              - python-pycurl
              - ansible
            write_files:
            # Ansible hosts file
              - path: /etc/ansible/hosts
                permissions: '0644'
                content: |
                  [localhost]
                  localhost
            runcmd:
            # Install nodesource.node using Ansible
              - ansible-galaxy install nodesource.node
            # Clone the playbook repo
              - git clone https://github.com/avsd/dev-server.git /tmp/dev-server-playbook/
            # Play ansible playbook
              - ansible-playbook /tmp/dev-server-playbook/playbook.yml >
                --extra-vars '{"username": "%u", "fullname": "%f", "email": "%e"}'
          params:
            "%u": { get_param: username }
            "%f": { get_param: fullname }
            "%e": { get_param: email }

outputs:
  key_name:
    description: SSH Key
    value: { get_param: key_name }

  server_url:
    value:
      str_replace:
        template: "http://%server_ip%/"
        params:
          "%server_ip%": { get_attr: [ dev_server, accessIPv4 ] }
    description: Server URL

  server_ip:
    value: { get_attr: [ dev_server, accessIPv4 ] }
    description: Server IP
